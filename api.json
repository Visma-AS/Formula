{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "TodoMVC"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "paths": {
    "/form": {
      "get": {
        "summary": "List all forms",
        "operationId": "getForms",
        "responses": {
          "200": {
            "description": "An array of forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forms"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a form",
        "operationId": "postForm",
        "responses": {
          "201": {
            "description": "Null response"
          }
        }
      },
      "put": {
        "summary": "Update a form",
        "operationId": "putForm",
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/form/draft": {
      "get": {
        "summary": "List draft forms",
        "operationId": "getDraftForms",
        "responses": {
          "200": {
            "description": "An array of forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forms"
                }
              }
            }
          }
        }
      }
    },
    "/form/published": {
      "get": {
        "summary": "List published forms",
        "operationId": "getPublishedForms",
        "responses": {
          "200": {
            "description": "An array of forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forms"
                }
              }
            }
          }
        }
      }
    },
    "/form/published/public": {
      "get": {
        "summary": "List published public forms",
        "operationId": "getPublishedPublicForms",
        "responses": {
          "200": {
            "description": "An array of forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forms"
                }
              }
            }
          }
        }
      }
    },
    "/form/tags": {
      "get": {
        "summary": "List form tags",
        "operationId": "getFormTags",
        "responses": {
          "200": {
            "description": "An array of form tags",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tags"
                }
              }
            }
          }
        }
      }
    },
    "/config/handlers": {
      "get": {
        "summary": "List form submission handlers",
        "operationId": "getFormHandlers",
        "responses": {
          "200": {
            "description": "An array of form submission handlers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Handlers"
                }
              }
            }
          }
        }
      }
    },
    "/form/{formId}": {
      "get": {
        "summary": "Get a form by id",
        "operationId": "getForm",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a form",
        "operationId": "deleteForm",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/form/{formIds}": {
      "get": {
        "summary": "Get forms by ids",
        "operationId": "getFormsByIds",
        "parameters": [
          {
            "name": "formIds",
            "in": "path",
            "required": true,
            "description": "List of form ids",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        }
      }
    },
    "/form/{formId}/{formRev}": {
      "get": {
        "summary": "Get a form by id",
        "operationId": "getFormRev",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formRev",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        }
      }
    },
    "/form/collated/{formId}": {
      "get": {
        "summary": "Get a self contained representation of form by id",
        "operationId": "getAtomicForm",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        }
      }
    },
    "/formgroup": {
      "get": {
        "summary": "List all form groups",
        "operationId": "getFormGroups",
        "responses": {
          "200": {
            "description": "An array of form groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormGroups"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a form group",
        "operationId": "postFormGroup",
        "responses": {
          "201": {
            "description": "Null response"
          }
        }
      },
      "put": {
        "summary": "Update a form group",
        "operationId": "putFormGroup",
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/formgroup/{formGroupId}": {
      "get": {
        "summary": "Get a form group by id",
        "operationId": "getFormGroup",
        "parameters": [
          {
            "name": "formGroupId",
            "in": "path",
            "required": true,
            "description": "The id of the form group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a form group",
        "operationId": "deleteFormGroup",
        "parameters": [
          {
            "name": "formGroupId",
            "in": "path",
            "required": true,
            "description": "The id of the form group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/field": {
      "get": {
        "summary": "List all fields",
        "operationId": "getFields",
        "responses": {
          "200": {
            "description": "An array of fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fields"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a field",
        "operationId": "postField",
        "responses": {
          "201": {
            "description": "Null response"
          }
        }
      },
      "put": {
        "summary": "Update a field",
        "operationId": "putField",
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/field/{fieldId}": {
      "get": {
        "summary": "Get a field by id",
        "operationId": "getField",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "description": "The id of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a field",
        "operationId": "deleteField",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "description": "The id of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Null response"
          }
        }
      }
    },
    "/formdata/submit": {
      "post": {
        "summary": "Submit a form",
        "operationId": "postFormData",
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "required": false,
            "description": "Action for data submission",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draftReference",
            "in": "query",
            "required": false,
            "description": "Reference to formdata the submission is based on",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Structured object with handler id and attribute map",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/formdata/submit/{dataId}": {
      "post": {
        "summary": "Resubmit a form",
        "operationId": "resubmitFormData",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "description": "The id of the data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "required": true,
            "description": "Credentials of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionId",
            "in": "query",
            "required": false,
            "description": "Action for data submission",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Structured object with handler id and attribute map",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/formdata/{dataId}": {
      "get": {
        "summary": "Get a form data by id",
        "operationId": "getFormData",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "description": "The id of the data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Resubmit a form",
        "operationId": "putFormData",
        "responses": {
          "201": {
            "description": "A form data id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/formdata/submit/{dataId}": {
      "post": {
        "summary": "Resubmit a form",
        "operationId": "postResubmitFormData",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "description": "The id of the data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "required": true,
            "description": "The credentials of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDraft",
            "in": "query",
            "required": false,
            "description": "Identifies whether or not updating a draft",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A form data id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/formdata/{formId}/{formRev}/{dataId}": {
      "get": {
        "summary": "Get a form data by dataId, formId and form revision",
        "operationId": "getFormAndFormDataByRevision",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formRev",
            "in": "path",
            "required": true,
            "description": "The revision of the form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "description": "The id of the data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "required": true,
            "description": "Credentials of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataIsDraft",
            "in": "query",
            "required": false,
            "description": "Identifies whether fetching draft or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "form data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/formdata/{formId}/{dataId}": {
      "get": {
        "summary": "Get a form data by dataId, formId and form revision",
        "operationId": "getFormDataFromSubmissionHandler",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The id of the form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "description": "The id of the data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "required": true,
            "description": "Credentials of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataIsDraft",
            "in": "query",
            "required": false,
            "description": "Identifies whether fetching draft or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "form data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/port": {
      "get": {
        "summary": "Export configs",
        "operationId": "getConfigs",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "description": "The ids of the forms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A full export of everything",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Import configs",
        "operationId": "postConfigs",
        "parameters": [
          {
            "name": "usePortkeys",
            "in": "query",
            "required": false,
            "description": "Determines whether or not to use portkeys on import",
            "schema": {
              "type": "boolean"
            }
          }],
        "responses": {
          "201": {
            "description": "Null response"
          }
        }
      }
    },
    "/config": {
      "get": {
        "summary": "Get public server config",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "description": "Public server config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Form": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "_rev": {
            "type": "integer"
          }
        }
      },
      "Forms": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Form"
        }
      },
      "FormGroup": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "_rev": {
            "type": "integer"
          }
        }
      },
      "FormGroups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FormGroup"
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "_rev": {
            "type": "integer"
          }
        }
      },
      "Fields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Field"
        }
      },
      "Tag": {
        "type": "string"
      },
      "Handler": {
        "type": "string"
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        }
      },
      "Handlers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Handler"
        }
      },
      "Port": {
        "type": "object",
        "properties": {},
        "items": {
          "$ref": "#/components/schemas/Port"
        }
      },
      "Data": {
        "type": "object",
        "properties": {}
      },
      "Datas": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Data"
        }
      },
      "Config": {
        "type": "object",
        "properties": {
          "recaptcha": {
            "type": "object",
            "properties": {
              "sitekey": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
