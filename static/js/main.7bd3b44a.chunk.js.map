{"version":3,"sources":["../../src/dll.js","../../../dll.js","components/LocaleSwitcher.js","components/App.js","index.js","api/schema.json.js","../../src/client.js","../.compiled-lang lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["DLL","externals","react","muiMaterial","init","a","Object","name","module","window","dllDir","fetch","manifestResponse","manifest","import","linkElement","document","useStyles","makeStyles","theme","link","marginRight","spacing","LocaleSwitcher","useLocale","locale","setLocale","classes","displayNames","map","displayName","Link","component","selected","onClick","className","value","createTheme","palette","primary","main","purple","secondary","green","App","fallback","ThemeProvider","Container","maxWidth","basename","homepage","path","exact","render","Formula","config","title","elements","key","type","required","onSubmit","values","console","log","id","match","params","axios","defaults","baseURL","api","frontend","ReactDOM","StrictMode","getElementById","clientPromise","definition","client","create","getFormsRaw","getDraftFormsRaw","getPublishedFormsRaw","getPublishedPublicFormsRaw","getFormTagsRaw","getFormHandlersRaw","getFormRaw","getFormsByIdsRaw","getFormRevRaw","getAtomicFormRaw","getFormGroupsRaw","getFormGroupRaw","getFormgroupUsageCountRaw","getFieldsRaw","getFieldRaw","getFieldUsageCountRaw","getFormDataRaw","getFormAndFormDataByRevisionRaw","getFormDataFromSubmissionHandlerRaw","getConfigsRaw","getConfigRaw","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","t","keys","exports"],"mappings":"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","file":"static/js/main.7bd3b44a.chunk.js","sourcesContent":["import * as materialUICore from '@material-ui/core';\nimport * as materialUIStyles from '@material-ui/styles';\nimport * as xDatePickers from '@mui/x-date-pickers';\nimport * as muiBase from '@mui/base';\nimport * as muiMaterial from '@mui/material';\nimport * as emotionCore from '@emotion/core';\nimport * as emotionStyled from '@emotion/styled';\nimport * as emotionReact from '@emotion/react';\nimport * as react from 'react';\nimport * as reactDom from 'react-dom';\nimport * as reactIntl from 'react-intl';\nimport { globalVar, version } from '../dll';\n\nconst DLL = {};\n\nexport default DLL;\n\nconst externals = {\n  '@material-ui/core': materialUICore,\n  '@material-ui/styles': materialUIStyles,\n  react,\n  'react-dom': reactDom,\n  'react-intl': reactIntl,\n  '@emotion/react': emotionReact,\n  '@emotion/core': emotionCore,\n  '@mui/x-date-pickers': xDatePickers,\n  '@emotion/styled': emotionStyled,\n  '@mui/base': muiBase,\n  '@mui/material': muiMaterial,\n};\n\nexport const init = async (url) => {\n  for (const [name, module] of Object.entries(externals)) {\n    window[`${globalVar}_${name}`] = module;\n  }\n\n  const dllDir = `${url}/dll/${version}/`;\n\n  const manifestResponse = await fetch(dllDir + 'manifest.json');\n  const manifest = await manifestResponse.json();\n\n  await import(/* webpackIgnore: true */ dllDir + manifest['main.js']);\n\n  const linkElement = document.createElement('link');\n  linkElement.rel = 'stylesheet';\n  linkElement.href = dllDir + manifest['main.css'];\n  document.head.appendChild(linkElement);\n\n  Object.assign(DLL, window.__formula);\n};\n","export const filename = 'formula-dll';\nexport const version = 'v0.4'; // Below v1 we use v0.x to indicate breaking changes\nexport const globalVar = '__formula';\n","import { makeStyles } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport displayNames from '@visma/react-app-locale-utils/lib/displayNames';\nimport useLocale from '@visma/react-app-locale-utils/lib/useLocale';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nexport default function LocaleSwitcher() {\n  const [locale, setLocale] = useLocale();\n  const classes = useStyles();\n\n  return displayNames.map((displayName) => (\n    <Link\n      component=\"button\"\n      key={displayName.locale}\n      selected={locale === displayName.locale}\n      onClick={() => {\n        setLocale(displayName.locale);\n      }}\n      className={classes.link}\n    >\n      {displayName.value}\n    </Link>\n  ));\n}\n","import { ThemeProvider } from '@material-ui/core';\nimport green from '@material-ui/core/colors/green';\nimport purple from '@material-ui/core/colors/purple';\nimport Container from '@material-ui/core/Container';\nimport { createTheme } from '@material-ui/core/styles';\nimport DLL from '@visma/formula/lib/dll';\nimport AppProvider from '@visma/react-app-super-template';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { homepage } from '../../package.json';\nimport LocaleSwitcher from './LocaleSwitcher';\nimport config from '@visma/public.config';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default function App() {\n  return (\n    <AppProvider fallback={null}>\n      <ThemeProvider theme={theme}>\n        <Container maxWidth=\"md\">\n          <LocaleSwitcher />\n          <BrowserRouter\n            basename={process.env.NODE_ENV === 'test' ? undefined : homepage}\n          >\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                render={() => (\n                  <>\n                    <DLL.Formula\n                      config={{\n                        title: 'Log In',\n                        elements: [\n                          {\n                            key: 'email',\n                            type: 'email',\n                            name: 'Email Address',\n                            required: true,\n                          },\n                          {\n                            key: 'password',\n                            type: 'password',\n                            name: 'Password',\n                            required: true,\n                          },\n                        ],\n                      }}\n                      onSubmit={({ values }) => console.log(values)}\n                    />\n                    <DLL.Formula\n                      config={{\n                        title: 'Field types',\n                        elements: [\n                          {\n                            key: 'date',\n                            type: 'date',\n                            name: 'Date',\n                          },\n                          {\n                            key: 'richtext',\n                            type: 'richtext',\n                            name: 'Rich Text',\n                          },\n                        ],\n                      }}\n                      onSubmit={({ values }) => console.log(values)}\n                    />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/:id\"\n                render={({\n                  match: {\n                    params: { id },\n                  },\n                }) => (\n                  <DLL.Formula\n                    axios={(axios) => {\n                      axios.defaults.baseURL = config.api.baseURL;\n                    }}\n                    id={id}\n                  />\n                )}\n              />\n            </Switch>\n          </BrowserRouter>\n        </Container>\n      </ThemeProvider>\n    </AppProvider>\n  );\n}\n","import { init } from '@visma/formula/lib/dll';\nimport App from 'components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from '@visma/public.config';\n\nasync function main() {\n  await init(config.frontend);\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nmain();\n","export { default } from '@visma/formula/api.json';\n","import OpenAPIClientAxios from 'openapi-client-axios';\nimport { create } from '@postinumero/use-async';\nimport definition from './../api.json';\nconst api = new OpenAPIClientAxios({ definition: definition });\nexport const clientPromise = api.init();\nexport async function getFormsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getForms'](...args);\n}\nexport async function putFormRaw(...args) {\n    const client = await clientPromise;\n    return await client['putForm'](...args);\n}\nexport async function postFormRaw(...args) {\n    const client = await clientPromise;\n    return await client['postForm'](...args);\n}\nexport async function getDraftFormsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getDraftForms'](...args);\n}\nexport async function getPublishedFormsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getPublishedForms'](...args);\n}\nexport async function getPublishedPublicFormsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getPublishedPublicForms'](...args);\n}\nexport async function getFormTagsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormTags'](...args);\n}\nexport async function getFormHandlersRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormHandlers'](...args);\n}\nexport async function getFormRaw(...args) {\n    const client = await clientPromise;\n    return await client['getForm'](...args);\n}\nexport async function deleteFormRaw(...args) {\n    const client = await clientPromise;\n    return await client['deleteForm'](...args);\n}\nexport async function getFormsByIdsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormsByIds'](...args);\n}\nexport async function getFormRevRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormRev'](...args);\n}\nexport async function getAtomicFormRaw(...args) {\n    const client = await clientPromise;\n    return await client['getAtomicForm'](...args);\n}\nexport async function getFormGroupsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormGroups'](...args);\n}\nexport async function putFormGroupRaw(...args) {\n    const client = await clientPromise;\n    return await client['putFormGroup'](...args);\n}\nexport async function postFormGroupRaw(...args) {\n    const client = await clientPromise;\n    return await client['postFormGroup'](...args);\n}\nexport async function getFormGroupRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormGroup'](...args);\n}\nexport async function deleteFormGroupRaw(...args) {\n    const client = await clientPromise;\n    return await client['deleteFormGroup'](...args);\n}\nexport async function getFormgroupUsageCountRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormgroupUsageCount'](...args);\n}\nexport async function getFieldsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFields'](...args);\n}\nexport async function putFieldRaw(...args) {\n    const client = await clientPromise;\n    return await client['putField'](...args);\n}\nexport async function postFieldRaw(...args) {\n    const client = await clientPromise;\n    return await client['postField'](...args);\n}\nexport async function getFieldRaw(...args) {\n    const client = await clientPromise;\n    return await client['getField'](...args);\n}\nexport async function deleteFieldRaw(...args) {\n    const client = await clientPromise;\n    return await client['deleteField'](...args);\n}\nexport async function getFieldUsageCountRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFieldUsageCount'](...args);\n}\nexport async function postFormDataRaw(...args) {\n    const client = await clientPromise;\n    return await client['postFormData'](...args);\n}\nexport async function getFormDataRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormData'](...args);\n}\nexport async function putFormDataRaw(...args) {\n    const client = await clientPromise;\n    return await client['putFormData'](...args);\n}\nexport async function postResubmitFormDataRaw(...args) {\n    const client = await clientPromise;\n    return await client['postResubmitFormData'](...args);\n}\nexport async function getFormAndFormDataByRevisionRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormAndFormDataByRevision'](...args);\n}\nexport async function getFormDataFromSubmissionHandlerRaw(...args) {\n    const client = await clientPromise;\n    return await client['getFormDataFromSubmissionHandler'](...args);\n}\nexport async function getConfigsRaw(...args) {\n    const client = await clientPromise;\n    return await client['getConfigs'](...args);\n}\nexport async function postConfigsRaw(...args) {\n    const client = await clientPromise;\n    return await client['postConfigs'](...args);\n}\nexport async function getConfigRaw(...args) {\n    const client = await clientPromise;\n    return await client['getConfig'](...args);\n}\nexport async function postConfigRaw(...args) {\n    const client = await clientPromise;\n    return await client['postConfig'](...args);\n}\nexport async function getForms(...args) {\n    const response = await getFormsRaw(...args);\n    return response.data;\n}\nexport async function putForm(...args) {\n    const response = await putFormRaw(...args);\n    return response.data;\n}\nexport async function postForm(...args) {\n    const response = await postFormRaw(...args);\n    return response.data;\n}\nexport async function getDraftForms(...args) {\n    const response = await getDraftFormsRaw(...args);\n    return response.data;\n}\nexport async function getPublishedForms(...args) {\n    const response = await getPublishedFormsRaw(...args);\n    return response.data;\n}\nexport async function getPublishedPublicForms(...args) {\n    const response = await getPublishedPublicFormsRaw(...args);\n    return response.data;\n}\nexport async function getFormTags(...args) {\n    const response = await getFormTagsRaw(...args);\n    return response.data;\n}\nexport async function getFormHandlers(...args) {\n    const response = await getFormHandlersRaw(...args);\n    return response.data;\n}\nexport async function getForm(...args) {\n    const response = await getFormRaw(...args);\n    return response.data;\n}\nexport async function deleteForm(...args) {\n    const response = await deleteFormRaw(...args);\n    return response.data;\n}\nexport async function getFormsByIds(...args) {\n    const response = await getFormsByIdsRaw(...args);\n    return response.data;\n}\nexport async function getFormRev(...args) {\n    const response = await getFormRevRaw(...args);\n    return response.data;\n}\nexport async function getAtomicForm(...args) {\n    const response = await getAtomicFormRaw(...args);\n    return response.data;\n}\nexport async function getFormGroups(...args) {\n    const response = await getFormGroupsRaw(...args);\n    return response.data;\n}\nexport async function putFormGroup(...args) {\n    const response = await putFormGroupRaw(...args);\n    return response.data;\n}\nexport async function postFormGroup(...args) {\n    const response = await postFormGroupRaw(...args);\n    return response.data;\n}\nexport async function getFormGroup(...args) {\n    const response = await getFormGroupRaw(...args);\n    return response.data;\n}\nexport async function deleteFormGroup(...args) {\n    const response = await deleteFormGroupRaw(...args);\n    return response.data;\n}\nexport async function getFormgroupUsageCount(...args) {\n    const response = await getFormgroupUsageCountRaw(...args);\n    return response.data;\n}\nexport async function getFields(...args) {\n    const response = await getFieldsRaw(...args);\n    return response.data;\n}\nexport async function putField(...args) {\n    const response = await putFieldRaw(...args);\n    return response.data;\n}\nexport async function postField(...args) {\n    const response = await postFieldRaw(...args);\n    return response.data;\n}\nexport async function getField(...args) {\n    const response = await getFieldRaw(...args);\n    return response.data;\n}\nexport async function deleteField(...args) {\n    const response = await deleteFieldRaw(...args);\n    return response.data;\n}\nexport async function getFieldUsageCount(...args) {\n    const response = await getFieldUsageCountRaw(...args);\n    return response.data;\n}\nexport async function postFormData(...args) {\n    const response = await postFormDataRaw(...args);\n    return response.data;\n}\nexport async function getFormData(...args) {\n    const response = await getFormDataRaw(...args);\n    return response.data;\n}\nexport async function putFormData(...args) {\n    const response = await putFormDataRaw(...args);\n    return response.data;\n}\nexport async function postResubmitFormData(...args) {\n    const response = await postResubmitFormDataRaw(...args);\n    return response.data;\n}\nexport async function getFormAndFormDataByRevision(...args) {\n    const response = await getFormAndFormDataByRevisionRaw(...args);\n    return response.data;\n}\nexport async function getFormDataFromSubmissionHandler(...args) {\n    const response = await getFormDataFromSubmissionHandlerRaw(...args);\n    return response.data;\n}\nexport async function getConfigs(...args) {\n    const response = await getConfigsRaw(...args);\n    return response.data;\n}\nexport async function postConfigs(...args) {\n    const response = await postConfigsRaw(...args);\n    return response.data;\n}\nexport async function getConfig(...args) {\n    const response = await getConfigRaw(...args);\n    return response.data;\n}\nexport async function postConfig(...args) {\n    const response = await postConfigRaw(...args);\n    return response.data;\n}\nexport const [useFormsRaw, refetchForms, useFormsRawSafe] = create(getFormsRaw, { id: 'react-openapi-client-generator-getForms' });\nexport const [useDraftFormsRaw, refetchDraftForms, useDraftFormsRawSafe] = create(getDraftFormsRaw, { id: 'react-openapi-client-generator-getDraftForms' });\nexport const [usePublishedFormsRaw, refetchPublishedForms, usePublishedFormsRawSafe] = create(getPublishedFormsRaw, { id: 'react-openapi-client-generator-getPublishedForms' });\nexport const [usePublishedPublicFormsRaw, refetchPublishedPublicForms, usePublishedPublicFormsRawSafe] = create(getPublishedPublicFormsRaw, { id: 'react-openapi-client-generator-getPublishedPublicForms' });\nexport const [useFormTagsRaw, refetchFormTags, useFormTagsRawSafe] = create(getFormTagsRaw, { id: 'react-openapi-client-generator-getFormTags' });\nexport const [useFormHandlersRaw, refetchFormHandlers, useFormHandlersRawSafe] = create(getFormHandlersRaw, { id: 'react-openapi-client-generator-getFormHandlers' });\nexport const [useFormRaw, refetchForm, useFormRawSafe] = create(getFormRaw, { id: 'react-openapi-client-generator-getForm' });\nexport const [useFormsByIdsRaw, refetchFormsByIds, useFormsByIdsRawSafe] = create(getFormsByIdsRaw, { id: 'react-openapi-client-generator-getFormsByIds' });\nexport const [useFormRevRaw, refetchFormRev, useFormRevRawSafe] = create(getFormRevRaw, { id: 'react-openapi-client-generator-getFormRev' });\nexport const [useAtomicFormRaw, refetchAtomicForm, useAtomicFormRawSafe] = create(getAtomicFormRaw, { id: 'react-openapi-client-generator-getAtomicForm' });\nexport const [useFormGroupsRaw, refetchFormGroups, useFormGroupsRawSafe] = create(getFormGroupsRaw, { id: 'react-openapi-client-generator-getFormGroups' });\nexport const [useFormGroupRaw, refetchFormGroup, useFormGroupRawSafe] = create(getFormGroupRaw, { id: 'react-openapi-client-generator-getFormGroup' });\nexport const [useFormgroupUsageCountRaw, refetchFormgroupUsageCount, useFormgroupUsageCountRawSafe] = create(getFormgroupUsageCountRaw, { id: 'react-openapi-client-generator-getFormgroupUsageCount' });\nexport const [useFieldsRaw, refetchFields, useFieldsRawSafe] = create(getFieldsRaw, { id: 'react-openapi-client-generator-getFields' });\nexport const [useFieldRaw, refetchField, useFieldRawSafe] = create(getFieldRaw, { id: 'react-openapi-client-generator-getField' });\nexport const [useFieldUsageCountRaw, refetchFieldUsageCount, useFieldUsageCountRawSafe] = create(getFieldUsageCountRaw, { id: 'react-openapi-client-generator-getFieldUsageCount' });\nexport const [useFormDataRaw, refetchFormData, useFormDataRawSafe] = create(getFormDataRaw, { id: 'react-openapi-client-generator-getFormData' });\nexport const [useFormAndFormDataByRevisionRaw, refetchFormAndFormDataByRevision, useFormAndFormDataByRevisionRawSafe] = create(getFormAndFormDataByRevisionRaw, { id: 'react-openapi-client-generator-getFormAndFormDataByRevision' });\nexport const [useFormDataFromSubmissionHandlerRaw, refetchFormDataFromSubmissionHandler, useFormDataFromSubmissionHandlerRawSafe] = create(getFormDataFromSubmissionHandlerRaw, { id: 'react-openapi-client-generator-getFormDataFromSubmissionHandler' });\nexport const [useConfigsRaw, refetchConfigs, useConfigsRawSafe] = create(getConfigsRaw, { id: 'react-openapi-client-generator-getConfigs' });\nexport const [useConfigRaw, refetchConfig, useConfigRawSafe] = create(getConfigRaw, { id: 'react-openapi-client-generator-getConfig' });\nexport function useForms(...args) {\n    return useFormsRaw(...args).data;\n}\nexport function useDraftForms(...args) {\n    return useDraftFormsRaw(...args).data;\n}\nexport function usePublishedForms(...args) {\n    return usePublishedFormsRaw(...args).data;\n}\nexport function usePublishedPublicForms(...args) {\n    return usePublishedPublicFormsRaw(...args).data;\n}\nexport function useFormTags(...args) {\n    return useFormTagsRaw(...args).data;\n}\nexport function useFormHandlers(...args) {\n    return useFormHandlersRaw(...args).data;\n}\nexport function useForm(...args) {\n    return useFormRaw(...args).data;\n}\nexport function useFormsByIds(...args) {\n    return useFormsByIdsRaw(...args).data;\n}\nexport function useFormRev(...args) {\n    return useFormRevRaw(...args).data;\n}\nexport function useAtomicForm(...args) {\n    return useAtomicFormRaw(...args).data;\n}\nexport function useFormGroups(...args) {\n    return useFormGroupsRaw(...args).data;\n}\nexport function useFormGroup(...args) {\n    return useFormGroupRaw(...args).data;\n}\nexport function useFormgroupUsageCount(...args) {\n    return useFormgroupUsageCountRaw(...args).data;\n}\nexport function useFields(...args) {\n    return useFieldsRaw(...args).data;\n}\nexport function useField(...args) {\n    return useFieldRaw(...args).data;\n}\nexport function useFieldUsageCount(...args) {\n    return useFieldUsageCountRaw(...args).data;\n}\nexport function useFormData(...args) {\n    return useFormDataRaw(...args).data;\n}\nexport function useFormAndFormDataByRevision(...args) {\n    return useFormAndFormDataByRevisionRaw(...args).data;\n}\nexport function useFormDataFromSubmissionHandler(...args) {\n    return useFormDataFromSubmissionHandlerRaw(...args).data;\n}\nexport function useConfigs(...args) {\n    return useConfigsRaw(...args).data;\n}\nexport function useConfig(...args) {\n    return useConfigRaw(...args).data;\n}\nexport function useFormsSafe(...args) {\n    const [error, response] = useFormsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useDraftFormsSafe(...args) {\n    const [error, response] = useDraftFormsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function usePublishedFormsSafe(...args) {\n    const [error, response] = usePublishedFormsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function usePublishedPublicFormsSafe(...args) {\n    const [error, response] = usePublishedPublicFormsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormTagsSafe(...args) {\n    const [error, response] = useFormTagsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormHandlersSafe(...args) {\n    const [error, response] = useFormHandlersRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormSafe(...args) {\n    const [error, response] = useFormRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormsByIdsSafe(...args) {\n    const [error, response] = useFormsByIdsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormRevSafe(...args) {\n    const [error, response] = useFormRevRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useAtomicFormSafe(...args) {\n    const [error, response] = useAtomicFormRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormGroupsSafe(...args) {\n    const [error, response] = useFormGroupsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormGroupSafe(...args) {\n    const [error, response] = useFormGroupRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormgroupUsageCountSafe(...args) {\n    const [error, response] = useFormgroupUsageCountRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFieldsSafe(...args) {\n    const [error, response] = useFieldsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFieldSafe(...args) {\n    const [error, response] = useFieldRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFieldUsageCountSafe(...args) {\n    const [error, response] = useFieldUsageCountRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormDataSafe(...args) {\n    const [error, response] = useFormDataRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormAndFormDataByRevisionSafe(...args) {\n    const [error, response] = useFormAndFormDataByRevisionRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useFormDataFromSubmissionHandlerSafe(...args) {\n    const [error, response] = useFormDataFromSubmissionHandlerRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useConfigsSafe(...args) {\n    const [error, response] = useConfigsRawSafe(...args);\n    return [error, response?.data];\n}\nexport function useConfigSafe(...args) {\n    const [error, response] = useConfigRawSafe(...args);\n    return [error, response?.data];\n}\n","var map = {\n\t\"./en-US\": [\n\t\t702,\n\t\t0\n\t],\n\t\"./en-US.json\": [\n\t\t702,\n\t\t0\n\t],\n\t\"./fi-FI\": [\n\t\t703,\n\t\t1\n\t],\n\t\"./fi-FI.json\": [\n\t\t703,\n\t\t1\n\t],\n\t\"./sv-SE\": [\n\t\t704,\n\t\t2\n\t],\n\t\"./sv-SE.json\": [\n\t\t704,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 763;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}